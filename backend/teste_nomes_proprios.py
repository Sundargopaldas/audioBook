import os
import sys
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app.tasks.audiobook import convert_text_to_speech, preprocess_text_for_tts

# Texto de teste focado nos nomes pr√≥prios que eram soletrados
texto_nomes = """
TESTE DE PRON√öNCIA DE NOMES PR√ìPRIOS

Os her√≥is de Kanzime se reuniram no reino de Arthianto. Timuth, Hefra, Ranthari e Tardia chegaram √† cidade de Eknon para enfrentar os terr√≠veis Belfs.

Markus, o grande general, encontrou-se com a sacerdotisa Lyra no penhasco de Arighon. O inventor Theo mostrou suas cria√ß√µes para Viktor, enquanto o comerciante Aldric negociava com o jovem nobre Edmund.

"Kanzime precisa de nossos her√≥is!" gritou Timuth. 
"Os Belfs atacaram Arthianto!" respondeu Hefra.
"Devemos proteger Eknon!" declarou Ranthari.
"Unidos por Kanzime!" concluiu Tardia.

O destino de Kanzime estava nas m√£os dos valorosos guerreiros de Arthianto.
""".strip()

print("=== TESTE DE NOMES PR√ìPRIOS ===")
print(f"Texto original:")
print(texto_nomes[:200] + "...")
print(f"\nTamanho: {len(texto_nomes)} caracteres")

# Testar pr√©-processamento
print("\n--- Testando pr√©-processamento ---")
texto_processado = preprocess_text_for_tts(texto_nomes)
print("Texto ap√≥s pr√©-processamento:")
print(texto_processado[:200] + "...")

# Mostrar diferen√ßas espec√≠ficas
print("\n--- Substitui√ß√µes aplicadas ---")
original_names = ['Kanzime', 'Timuth', 'Hefra', 'Ranthari', 'Tardia', 'Arthianto', 'Eknon', 'Belfs', 'Markus', 'Lyra', 'Arighon', 'Theo', 'Viktor', 'Aldric', 'Edmund']

for name in original_names:
    if name in texto_nomes and name.lower() not in texto_processado.lower():
        print(f"‚úÖ {name} foi substitu√≠do")
    elif name in texto_nomes:
        # Procurar pela vers√£o modificada
        if name == 'Kanzime' and 'canzimi' in texto_processado.lower():
            print(f"‚úÖ {name} ‚Üí Canzimi")
        elif name == 'Timuth' and 'timute' in texto_processado.lower():
            print(f"‚úÖ {name} ‚Üí Timute")
        elif name == 'Hefra' and '√©fra' in texto_processado.lower():
            print(f"‚úÖ {name} ‚Üí √âfra")
        else:
            print(f"‚ö†Ô∏è {name} ainda presente")

# Testar TTS melhorado
print("\n--- Testando TTS com nomes melhorados ---")
class DummySelf:
    pass

output_file = "teste_nomes_proprios_melhorado.mp3"
try:
    print("Iniciando gera√ß√£o de √°udio...")
    result = convert_text_to_speech(DummySelf(), texto_nomes, output_file)
    print(f"‚úÖ √Åudio gerado com sucesso: {result}")
    
    if os.path.exists(result):
        size = os.path.getsize(result)
        print(f"Tamanho do arquivo gerado: {size} bytes")
        print(f"Dura√ß√£o estimada: ~{size/32000:.1f} segundos")
    else:
        print("‚ùå Arquivo n√£o foi criado")
        
except Exception as e:
    print(f"‚ùå Erro: {str(e)}")
    import traceback
    traceback.print_exc()

print("\n=== TESTE CONCLU√çDO ===")
print("üéß Por favor, escute o arquivo gerado para verificar se:")
print("1. 'Kanzime' √© pronunciado como 'Canzimi' (n√£o soletrado)")
print("2. Outros nomes pr√≥prios t√™m pron√∫ncia melhorada")
print("3. A qualidade geral da narra√ß√£o est√° boa") 